

model{

## PRIORS AND CONSTRAINTS ##

#  Space use and recapture probability parameters:
for(sex in 1:2){
  kappa[sex] ~ dunif(0,5)## parameter which governs the shape of decline of the detection function
  sigma[sex] ~ dunif(0.01,80)
}

for(sex in 1:2){
  for(TOD in 1:2){### TOD is trap type
    lambda[TOD, sex] <- exp(log.lambda0) * pow(beta[1],(TOD-1)) * pow(beta[2],(sex-1))
  }
}
PL ~ dunif(0.01,0.99)
log.lambda0 <- log(-log(1-PL)) 
beta[1] ~ dunif(0.1,10)
beta[2] ~ dunif(0.1,10)



#### SEX AND SEASON SPECIFIC PARAMETERS ####

for(sex in 1:2){
  for(k in 1:(n.prim-1)){
## Survival parameters ###
daily.phi[sex,k] ~ dunif(0.9,1)
    phi[sex,k] <- pow(daily.phi[sex,k], dt[k])
 annual.surv[sex,k]<-pow(daily.phi[sex,k], 365)

## Movement between primary sessions ###
sigma.ar[k,sex]~dunif(0,200)
tau[k,sex]<-1/(sigma.ar[k,sex]*sigma.ar[k,sex])
  }
}



## MODEL - SIMPLIFIED BY ALLOWING ALL RATS TO HAVE A NEW HOME RANGE CENTRE IN EACH PRIMARY SESSION ##


# Loop over individuals that are only seen in the last primary session or the session they are censored

for(i in 1:N[1]){### START LOOP OVER INDIVIDUALS
  z[i,first[i]] ~ dbern(1)
  S[i,1,first[i]] ~ dunif(xlow[i], xupp[i]) # Prior for the first x coordinate
  S[i,2,first[i]] ~ dunif(ylow[i], yupp[i]) # Prior for the first y coordinate
  g[i,first[i],1] <- 0

  for(r in 1:R){### START LOOP OVER TRAPS
      D[i,r,first[i]] <- sqrt(pow(S[i,1,first[i]]-X[r,1],2) + pow(S[i,2,first[i]]-X[r,2],2))
      g[i,first[i],r+1] <- exp(-pow(D[i,r,first[i]]/sigma[gr[i]], kappa[gr[i]])) ### DETECTION FUNCTION which is equivalent to the exponential when kappa= 1 or the halfnormal when kappa = 2.
  }### END LOOP OVER TRAPS
  G[i,first[i]] <- sum(g[i,first[i],]) # Total trap exposure

  for(j in 1:J[i,first[i]]){### START LOOP OVER SECONDARY OCCASIONS
    P[i,j,first[i]] <- 1 - exp(-lambda[Htt2[i,j,first[i]],gr[i]]*G[i,first[i]]) ### Probability of being captured, based on trap type in which ind is caught
    PI[i,first[i],j] <- step(H[i,j,first[i]]-2)*(g[i,first[i],H[i,j,first[i]]]/(G[i,first[i]]+ 0.000000001))*P[i,j,first[i]] + (1-step(H[i,j,first[i]]-2))*(1-P[i,j,first[i]])
    PIdum[i,first[i],j]<- PI[i,first[i],j]+equals(PI[i,first[i],j],0)*0.000001
    Ones[i,j,first[i]] ~ dbern(PIdum[i,first[i],j])
  }### END LOOP OVER SECONDARY OCCASIONS
}### END LOOP OVER INDIVIDUALS

# Loop over all other individuals
for(i in (N[1]+1):N[2]){### START LOOP OVER INDIVIDUALS
  z[i,first[i]] ~ dbern(1)
  S[i,1,first[i]] ~ dunif(xlow[i], xupp[i]) # Prior for the first x coordinate
  S[i,2,first[i]] ~ dunif(ylow[i], yupp[i]) # Prior for the first y coordinate


## First primary session:
  g[i,first[i],1] <- 0
  for(r in 1:R){### START LOOP OVER TRAPS
      D[i,r,first[i]] <- sqrt(pow(S[i,1,first[i]]-X[r,1],2) + pow(S[i,2,first[i]]-X[r,2],2))
      g[i,first[i],r+1] <- exp(-pow(D[i,r,first[i]]/sigma[gr[i]], kappa[gr[i]])) # Trap exposure
  }### END LOOP OVER TRAPS
  G[i,first[i]] <- sum(g[i,first[i],]) # Total trap exposure
  for(j in 1:J[i,first[i]]){### START LOOP OVER SECONDARY OCCASIONS
      P[i,j,first[i]] <- 1 - exp(-lambda[Htt2[i,j,first[i]],gr[i]]*G[i,first[i]]) # Probability of being captured
    PI[i,first[i],j] <- step(H[i,j,first[i]]-2)*(g[i,first[i],H[i,j,first[i]]]/(G[i,first[i]]+ 0.000000001))*P[i,j,first[i]] + (1-step(H[i,j,first[i]]-2))*(1-P[i,j,first[i]])
PIdum[i,first[i],j]<- PI[i,first[i],j]+equals(PI[i,first[i],j],0)*0.0001    
Ones[i,j,first[i]] ~ dbern(PIdum[i,first[i],j])
  }### END LOOP OVER SECONDARY OCCASIONS
  
## Later primary sessions
  for(k in (first[i]+1):K[i]){### START LOOP OVER PRIMARY OCCASIONS
    S[i,1,k] ~ dnorm(S[i,1,k-1], tau[k-1,gr[i]])#T(xlow[i], xupp[i]) # priors for the activity centers based on movement from first capture location, truncated by state space
    S[i,2,k] ~ dnorm(S[i,2,k-1], tau[k-1,gr[i]])#T(ylow[i], yupp[i]) # priors for the activity centers based on movement from first capture location, truncated by state space

    z[i,k] ~ dbern(Palive[i,k-1])
    Palive[i,k-1] <- z[i,k-1]*phi[gr[i],k-1] # Pr(alive in primary session k) gr[i] = sex
    g[i,k,1] <- 0
    G[i,k] <- sum(g[i,k,]) # Total trap exposure

## Derived parameter distance between subsequent homerange centers
    reloc.dist[i,k-1]<- sqrt(pow(S[i,1,k]-S[i,1,k-1],2) + pow(S[i,2,k]-S[i,2,k-1],2))  # DISTANCE between subsequent home range centers

## loop over each trap
    for(r in 1:R){### START LOOP OVER TRAPS
      D[i,r,k] <- sqrt(pow(S[i,1,k]-X[r,1],2) + pow(S[i,2,k]-X[r,2],2))  # Squared distance to trap
      g[i,k,r+1] <- exp(-pow(D[i,r,k]/sigma[gr[i]], kappa[gr[i]])) # Trap exposure
    }### END LOOP OVER TRAPS


    for(j in 1:J[i,k]){### START LOOP OVER SECONDARY OCCASIONS
      P[i,j,k] <- (1 - exp(-lambda[Htt2[i,j,first[i]],gr[i]]*G[i,k]))*z[i,k] # Probability of being captured
    PI[i,k,j] <- step(H[i,j,k]-2)*(g[i,k,H[i,j,k]]/(G[i,k] + 0.000000001))*P[i,j,k] + (1-step(H[i,j,k]-2))*(1-P[i,j,k])
PIdum[i,k,j]<- PI[i,k,j]+equals(PI[i,k,j],0)*0.0001  
    Ones[i,j,k] ~ dbern(PIdum[i,k,j])
    }### END LOOP OVER SECONDARY OCCASIONS
  }### END LOOP OVER PRIMARY OCCASIONS
}### END LOOP OVER INDIVIDUALS


## DERIVED PARAMETER OF HR_SHIFT ##
#for(sex in 1:2){
#  for(k in 1:6){### START LOOP OVER PRIMARY OCCASIONS
#    HR_shift[k]<-mean(reloc.dist[,k])  # DISTANCE between subsequent home range centers
#}
#}

}### END MODEL LOOP


