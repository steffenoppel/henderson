

model {


#### PRIORS ####

## Movement around home-range centre affects capture probability ###
### NEED TO MAKE TEMPORALLY VARIABLE ###
for(a in 1:2){# allow different sigma for two age classes
for (s in 1:2){# allow different sigma for two sexes
sigma[a,s] ~ dunif(0, 80)     # set up the priors for the time-invariant parameters
#sigma2[a,s] <- sigma[a,s]*sigma[a,s]   ##not needed for exponential detection function: g0 exp(- d / sigma) 
}
}

## Capture probability depends on trap type and season###
for(t in 1:T){
for (u in 1:2){## capture probability differs by traptype
lam0[t,u]~dgamma(0.1,0.1)
}
}

## Survival probability varies by season - specified as annual survival###
for(t in 1:(T-1)){
ann.phi[t]~dunif(0.2, 0.8)
}


## Movement between primary sessions ###
sigma.ar~dunif(0,200)
tau<-1/(sigma.ar*sigma.ar)




#### MODEL ####       
   for (i in 1:M){    # loop through the population of M trapped rats
       z[i,first[i]] <- 1       # CJS is conditional on capture, so alive state in first capture period must be 1   
       SX[i,first[i]]~dunif(xl[i], xu[i])    # priors for the activity centers for each individual at first capture
       SY[i,first[i]]~dunif(yl[i], yu[i])    # xl is the lower x coordinate, xu is the upper x value

## OBSERVATION MODEL FOR FIRST SESSION ##
     for(j in 1:ntraps) {     #loop through the J trap locations
           D2[i,j,first[i]] <- pow(pow(SX[i,first[i]]-grid[j,1], 2) + pow(SY[i,first[i]]-grid[j,2],2),0.5)## calculate distance from home range center to each trap location
           lam[i,j,first[i]] <- lam0[first[i],ttyp[j,first[i]]]*exp(-D2[i,j,first[i]]/sigma[ALT[i,1],ALT[i,2]])## exponential detection function based on distance
           tmp[i,j,first[i]] <- lam[i,j,first[i]]*K[j,first[i]]## correct by number of nights this trap was actually available
           y[i,j,first[i]] ~ dpois(tmp[i,j,first[i]])## count of observations at trap j is a poisson draw of capture probability
}# close the trap loop for first capture period

## OBSERVATION MODEL FOR SUBSEQUENT SESSIONS ##       
for(t in (first[i]+1):T){   #loop through the primary periods after the first capture session
       #SX[i,t]~dunif(xl[i], xu[i])    # priors for the activity centers completely random
       #SY[i,t]~dunif(yl[i], yu[i])    # xl is the lower x coordinate, xu is the upper x value
       SX[i,t]~dnorm(SX[i,t-1], tau)T(xl[i], xu[i])    # priors for the activity centers based on movement from first capture location, truncated by state space
       SY[i,t]~dnorm(SY[i,t-1], tau)T(yl[i], yu[i])   # xl is the lower x coordinate, xu is the upper x value

HR_shift[i,t] <- pow(pow(SX[i,t]-SX[i,t-1], 2) + pow(SY[i,t]-SY[i,t-1],2),0.5)## shift of home range centre from one prim occ to next

     for(j in 1:ntraps) {     #loop through the J trap locations
           D2[i,j,t] <- pow(pow(SX[i,t]-grid[j,1], 2) + pow(SY[i,t]-grid[j,2],2),0.5)## calculate distance from home range center to each trap location
           lam[i,j,t] <- lam0[t,ttyp[j,t]]*exp(-D2[i,j,t]/sigma[ALT[i,1],ALT[i,2]])## exponential detection function based on distance
           tmp[i,j,t] <- lam[i,j,t]*K[j,t]*z[i,t]## correct by number of nights this trap was actually available and by alive state of individual i at time t
           y[i,j,t] ~ dpois(tmp[i,j,t])## count of observations at trap j is a poisson draw of 
}# close the trap loop for subsequent capture periods

### SURVIVAL MODEL FOR TIME PERIOD T ##
phi[i,t-1]<-pow(pow(ann.phi[t-1],1/365),interval[t-1])  # scale survival from one primary session to next
phiUP[i,t]<-z[i,t-1]*phi[i,t-1]# change phi when not constant
z[i,t]~dbern(phiUP[i,t])

} ## close the primary session loop

          }## close the individual loop



### DERIVED PARAMETERS FOR SURVIVAL AND CAPTURE PROBABILITY ###

for(t in 1:(T-1)){
month.surv[t]<- pow(pow(ann.phi[t],1/365),30)
}
#month.surv<- pow(mphi,30)

capt.prob.Sherman<- mean(lam0[1:6,1])
capt.prob.Tomahawk<- mean(lam0[6:7,2])

#for(a in 1:2){
#for (s in 1:2){
#HR_area[a,s]<-(3.141593*(pow(sigma[a,s],2)))/10000### this is the mean home-range size of rats in ha
#}
#}



} ## close the model loop


